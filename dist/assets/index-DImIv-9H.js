(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))t(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&t(r)}).observe(document,{childList:!0,subtree:!0});function e(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(s){if(s.ep)return;s.ep=!0;const i=e(s);fetch(s.href,i)}})();let n,w,b,C;function T(){const l=window.location.hostname==="localhost",o=l?"./node_modules/three/build/three.module.js":"https://cdn.jsdelivr.net/npm/three/build/three.module.js",e=l?"./node_modules/three/examples/jsm/controls/OrbitControls.js":"https://cdn.jsdelivr.net/npm/three/examples/jsm/controls/OrbitControls.js",t=l?"./node_modules/three/examples/jsm/geometries/ParametricGeometry.js":"https://cdn.jsdelivr.net/npm/three/examples/jsm/geometries/ParametricGeometry.js",s=l?"./node_modules/three/examples/jsm/libs/stats.module.js":"https://cdn.jsdelivr.net/npm/three/examples/jsm/libs/stats.module.js";Promise.all([import(o),import(e),import(t),import(s)]).then(([i,r,a,h])=>{n=i,w=r.OrbitControls,b=a.ParametricGeometry,C=h.default,console.log("THREE.js loaded",n),console.log("OrbitControls loaded",w),console.log("ParametricGeometry loaded",b),console.log("Stats module loaded",C),new N}).catch(i=>{console.error("Error loading modules:",i)})}T();const E=.03,v=1-E,S=.1,P=18/1e3,x=P*P,c=30,p=30,d=10,m=-100,L=300,O=300,M=.8,I=.1,j=3,V=.75,g=20,A=1e3,G=500,H=1;class _{constructor(o,e,t,s){this.position=new n.Vector3,this.previous=new n.Vector3,this.original=new n.Vector3,this.a=new n.Vector3(0,0,0),this.mass=s,this.invMass=1/s,this.tmp=new n.Vector3,this.tmp2=new n.Vector3,this.position.set(o,e,t),this.previous.copy(this.position),this.original.copy(this.position)}addForce(o){this.a.add(this.tmp2.copy(o).multiplyScalar(this.invMass))}integrate(o){const e=this.tmp.subVectors(this.position,this.previous);e.multiplyScalar(v).add(this.position),e.add(this.a.multiplyScalar(o)),this.tmp=this.previous,this.previous=this.position,this.position=e,this.a.set(0,0,0)}}class N{constructor(){this.scene=new n.Scene,this.setupCamera(),this.setupLights(),this.setupRenderer(),this.setupCloth(),this.setupTable(),this.setupControls(),this.startTime=Date.now(),this.isPinned=!0,this.animate=this.animate.bind(this),requestAnimationFrame(this.animate)}setupCamera(){this.camera=new n.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,1e4),this.camera.position.set(0,500,1e3),this.camera.lookAt(0,0,0)}setupLights(){const o=new n.AmbientLight(6710886);this.scene.add(o);const e=new n.DirectionalLight(16777215,1);e.position.set(50,200,100),e.castShadow=!0,this.scene.add(e)}setupRenderer(){this.renderer=new n.WebGLRenderer({antialias:!0}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.shadowMap.enabled=!0,document.body.appendChild(this.renderer.domElement)}setupCloth(){const t=300/c,s=200/p;this.particles=[];for(let a=0;a<=p;a++)for(let h=0;h<=c;h++){const u=(h-c/2)*t,f=200,y=(a-p/2)*s;this.particles.push(new _(u,f,y,S))}this.constraints=[],this.createConstraints();const i=new b((a,h,u)=>{const f=a*300-150,y=h*200;u.set(f,y,0)},c,p),r=new n.MeshPhongMaterial({color:4473924,side:n.DoubleSide,wireframe:!1});this.clothMesh=new n.Mesh(i,r),this.clothMesh.castShadow=!0,this.clothMesh.receiveShadow=!0,this.scene.add(this.clothMesh)}setupTable(){const o=new n.BoxGeometry(L,20,O),e=new n.MeshPhongMaterial({color:8939059});this.table=new n.Mesh(o,e),this.table.position.y=m,this.table.receiveShadow=!0,this.scene.add(this.table)}setupControls(){this.controls=new w(this.camera,this.renderer.domElement),this.stats=new C,document.body.appendChild(this.stats.dom)}createConstraints(){for(let e=0;e<p;e++)for(let t=0;t<c;t++){const s=this.particles[e*(c+1)+t],i=this.particles[e*(c+1)+(t+1)],r=this.particles[(e+1)*(c+1)+t];this.constraints.push([s,i,d]),this.constraints.push([s,r,d])}const o=Math.sqrt(d*d*2);for(let e=0;e<p;e++)for(let t=0;t<c;t++){const s=this.particles[e*(c+1)+t],i=this.particles[(e+1)*(c+1)+(t+1)],r=this.particles[e*(c+1)+(t+1)],a=this.particles[(e+1)*(c+1)+t];this.constraints.push([s,i,o]),this.constraints.push([r,a,o])}}simulate(){this.isPinned&&Date.now()-this.startTime>A&&(this.isPinned=!1);const o=new n.Vector3(0,-1373.3999999999999,0).multiplyScalar(S);for(const e of this.particles)e.addForce(o),e.integrate(x);if(this.isPinned){const e=Math.floor(this.particles.length/2),t=this.particles[e];t.position.set(0,G,0),t.previous.copy(t.position)}for(let e=0;e<j;e++){for(const[t,s,i]of this.constraints)this.satisfyConstraint(t,s,i);this.handleCollisions()}}handleCollisions(){const o=m+g/2,e=this.calculateCenterOfMass();for(const t of this.particles)if(t.position.y<o){const s=o-t.position.y,i=new n.Vector3().subVectors(t.position,t.previous);if(new n.Vector3().subVectors(t.position,e),t.position.y=o,i.length()<I)t.previous.copy(t.position);else{const r=new n.Vector3(i.x,0,i.z);r.multiplyScalar(H),t.previous.x=t.position.x-r.x*(1-M),t.previous.z=t.position.z-r.z*(1-M),t.previous.y=t.position.y-i.y*V}this.propagateCollision(t,s*.5)}}calculateCenterOfMass(){const o=new n.Vector3;for(const e of this.particles)o.add(e.position);return o.divideScalar(this.particles.length)}propagateCollision(o,e){for(const[t,s]of this.constraints)t===o&&s.position.y<m+g?s.position.y+=e:s===o&&t.position.y<m+g&&(t.position.y+=e)}satisfyConstraint(o,e,t){const s=new n.Vector3().subVectors(e.position,o.position),i=s.length();if(i===0)return;const a=s.multiplyScalar(1-t/i).multiplyScalar(.5);o.position.add(a),e.position.sub(a)}updateClothGeometry(){const o=this.clothMesh.geometry.attributes.position;for(let e=0;e<this.particles.length;e++){const t=this.particles[e];o.setXYZ(e,t.position.x,t.position.y,t.position.z)}o.needsUpdate=!0,this.clothMesh.geometry.computeVertexNormals()}animate(){requestAnimationFrame(this.animate),this.simulate(),this.updateClothGeometry(),this.renderer.render(this.scene,this.camera),this.stats.update()}}
